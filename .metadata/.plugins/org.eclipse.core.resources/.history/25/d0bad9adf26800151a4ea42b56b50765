import java.util.concurrent.ThreadLocalRandom;

public class Random1 {
	public static void main(String[]args){
		int ran = genprivateNum();
		while(!(isPrime(ran))){
			ran+=1;
		}
		System.out.println(ran);
		
		ran = genpublicNum();
		while(!(isPrime(ran))){
			ran+=1;
		}
		System.out.println(ran);
	}
	

	
	public static boolean isPrime(int n) {
	    // fast even test.
	    if(n > 2 && (n & 1) == 0)
	       return false;
	    // only odd factors need to be tested up to n^0.5
	    for(int i = 3; i * i <= n; i += 2)
	        if (n % i == 0) 
	            return false;
	    return true;
	}
	
	public static int genprivateNum(){
		int min = 10;
		int max = 100;
		int ran;
		ran = ThreadLocalRandom.current().nextInt(min, max + 1);
		return ran;
	}
	
	public static int genpublicNum(){
		int min = 1000;
		int max = 10000;
		int ran;
		ran = ThreadLocalRandom.current().nextInt(min, max + 1);
		return ran;
	}
	
}
